{"version":3,"sources":["../../../../src/configs/webpack/rules/compiler.js"],"names":["babel","presets","plugins","envPreset","exclude","common","test","include","babelQuery","cacheDirectory","babelrc","loader","options","enforce","query"],"mappings":";;;;;;;;AAAA;;kBAEe,CAAC;AACEA,SAAO;AACLC,cAAU,EADL;AAELC,cAAU,EAFL;AAGLC,gBAAY;AAHP,GADT;AAMEC,YAAU,CAAC,cAAD;AANZ,CAAD,KAOO;AACpB,QAAMC,SAAS;AACbC,UAAM,0BAAO,cAAP,GAAwB,cADjB;AAEbF,WAFa;AAGbG,aAAS;AAHI,GAAf;AAKA,QAAMC,aAAa;AACjB;AACAC,oDAFiB;;AAIjB;AACAC,aAAS,KALQ;AAMjB;AACA;AACAT,aAAS;AACP;AACA;AACAE,aAHO;AAIP;AACA;AACA,aANO,EAOP,GAAGF,OAPI,CARQ;AAiBjBC,aAAS,CACP,IAAG,4BAAS,CAAC,6BAAD,CAAT,GAA2C,EAA9C,CADO,EAEP,GAAGA,OAFI;AAjBQ,GAAnB;;AAuBA,+BAAU;AACR,WAAO,cAEAG,MAFA;AAGHM,cAAQ,2BAHL;AAIHC,eAAS;AACP;AADO;AAJN,QAQL;AACEN,YAAM,OADR;AAEEF,aAFF;AAGEG,eAAS,4BAHX;AAIEM,eAAS,KAJX;AAKEF,cAAQ;AALV,KARK,CAAP;AAgBD,GAjBD,MAiBO;AACL,WAAO,cAEAN,MAFA;AAGHM,cAAQ,cAHL;AAIHG,aAAON;AAJJ,OAAP;AAOD;AACF,C","file":"compiler.js","sourcesContent":["import { context, isDevelopment, isMobx, isTS } from '../../prepare.build-tools.config';\n\nexport default ({\n                  babel: {\n                    presets = [],\n                    plugins = [],\n                    envPreset = [],\n                  },\n                  exclude = [/node_modules/],\n                }) => {\n  const common = {\n    test: isTS ? /\\.(ts|tsx)?$/ : /\\.(js|jsx)?$/,\n    exclude,\n    include: [context],\n  };\n  const babelQuery = {\n    // https://github.com/babel/babel-loader#options\n    cacheDirectory: isDevelopment,\n\n    // https://babeljs.io/docs/usage/options/\n    babelrc: false,\n    // TODO как заработает внедрить https://github.com/mobxjs/babel-plugin-mobx-deep-action/issues/5\n    //passPerPreset: true,\n    presets: [\n      // TODO как заработает внедрить https://github.com/mobxjs/babel-plugin-mobx-deep-action/issues/5\n      //...isMobx ? [{ plugins: ['transform-regenerator', 'mobx-deep-action'] }] : [],\n      envPreset,\n      // Stage 2: draft\n      // https://babeljs.io/docs/plugins/preset-stage-2/\n      'stage-2',\n      ...presets\n    ],\n    plugins: [\n      ...isMobx ? ['transform-decorators-legacy'] : [],\n      ...plugins\n    ],\n  };\n\n  if (isTS) {\n    return [\n      {\n        ...common,\n        loader: 'awesome-typescript-loader',\n        options: {\n          //configFileName: '',\n        },\n      },\n      {\n        test: /\\.js$/,\n        exclude,\n        include: [context],\n        enforce: 'pre',\n        loader: 'source-map-loader',\n      }\n    ]\n  } else {\n    return [\n      {\n        ...common,\n        loader: 'babel-loader',\n        query: babelQuery,\n      }\n    ]\n  }\n}\n"]}