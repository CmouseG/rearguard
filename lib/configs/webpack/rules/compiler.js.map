{"version":3,"sources":["../../../../src/configs/webpack/rules/compiler.js"],"names":["babel","presets","plugins","envPreset","exclude","common","include","babelQuery","cacheDirectory","babelrc","test","enforce","loader","use","query","options","configFileName"],"mappings":";;;;;;;;AAAA;;kBAEe,CAAC;AACEA,SAAO;AACLC,cAAU,EADL;AAELC,cAAU,EAFL;AAGLC,gBAAY;AAHP,GADT;AAMEC,YAAU,CAAC,cAAD;AANZ,CAAD,KAOO;AACpB,QAAMC,SAAS;AACbD,WADa;AAEbE,aAAS;AAFI,GAAf;AAIA,QAAMC,aAAa;AACjB;AACAC,oDAFiB;;AAIjB;AACAC,aAAS,KALQ;AAMjB;AACA;AACAR,aAAS;AACP;AACA;AACAE,aAHO;AAIP;AACA;AACA,aANO,EAOP,GAAGF,OAPI,CARQ;AAiBjBC,aAAS,CACP,IAAG,4BAAS,CAAC,6BAAD,CAAT,GAA2C,EAA9C,CADO,EAEP,GAAGA,OAFI;AAjBQ,GAAnB;;AAuBA,+BAAU;AACR,WAAO,CACL;AACEQ,YAAM,OADR;AAEEN,aAFF;AAGEE,eAAS,4BAHX;AAIEK,eAAS,KAJX;AAKEC,cAAQ;AALV,KADK,eASAP,MATA;AAUHK,YAAM,cAVH;AAWHG,WAAK,CACH;AACED,gBAAQ,cADV;AAEEE,eAAOP;AAFT,OADG,EAKH;AACEK,gBAAQ,WADV;AAEEG,iBAAS;AACPC;AADO;AAFX,OALG;AAXF,qBAyBAX,MAzBA;AA0BHK,YAAM,cA1BH;AA2BHE,cAAQ,cA3BL;AA4BHE,aAAOP;AA5BJ,OAAP;AAgCD,GAjCD,MAiCO;AACL,WAAO,cAEAF,MAFA;AAGHK,YAAM,cAHH;AAIHE,cAAQ,cAJL;AAKHE,aAAOP;AALJ,OAAP;AAQD;AACF,C","file":"compiler.js","sourcesContent":["import { context, isDevelopment, isMobx, isTS, tmpTypescryptConfigPath } from '../../prepare.build-tools.config';\n\nexport default ({\n                  babel: {\n                    presets = [],\n                    plugins = [],\n                    envPreset = [],\n                  },\n                  exclude = [/node_modules/],\n                }) => {\n  const common = {\n    exclude,\n    include: [context],\n  };\n  const babelQuery = {\n    // https://github.com/babel/babel-loader#options\n    cacheDirectory: isDevelopment,\n\n    // https://babeljs.io/docs/usage/options/\n    babelrc: false,\n    // TODO как заработает внедрить https://github.com/mobxjs/babel-plugin-mobx-deep-action/issues/5\n    //passPerPreset: true,\n    presets: [\n      // TODO как заработает внедрить https://github.com/mobxjs/babel-plugin-mobx-deep-action/issues/5\n      //...isMobx ? [{ plugins: ['transform-regenerator', 'mobx-deep-action'] }] : [],\n      envPreset,\n      // Stage 2: draft\n      // https://babeljs.io/docs/plugins/preset-stage-2/\n      'stage-2',\n      ...presets\n    ],\n    plugins: [\n      ...isMobx ? ['transform-decorators-legacy'] : [],\n      ...plugins\n    ],\n  };\n\n  if (isTS) {\n    return [\n      {\n        test: /\\.js$/,\n        exclude,\n        include: [context],\n        enforce: 'pre',\n        loader: 'source-map-loader',\n      },\n      {\n        ...common,\n        test: /\\.(ts|tsx)?$/,\n        use: [\n          {\n            loader: 'babel-loader',\n            query: babelQuery,\n          },\n          {\n            loader: 'ts-loader',\n            options: {\n              configFileName: tmpTypescryptConfigPath,\n            },\n          },\n        ],\n      },\n      {\n        ...common,\n        test: /\\.(js|jsx)?$/,\n        loader: 'babel-loader',\n        query: babelQuery,\n      },\n\n    ];\n  } else {\n    return [\n      {\n        ...common,\n        test: /\\.(js|jsx)?$/,\n        loader: 'babel-loader',\n        query: babelQuery,\n      },\n    ];\n  }\n}\n"]}