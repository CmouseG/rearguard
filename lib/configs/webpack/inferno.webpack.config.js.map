{"version":3,"sources":["../../../src/configs/webpack/inferno.webpack.config.js"],"names":["spa","entry","rules","babel","presets","plugins","envPreset","exclude","server","target","output","filename","libraryTarget","optimize","LimitChunkCountPlugin","maxChunks","BannerPlugin","banner","raw","entryOnly","externals","devtool","node","console","global","process","Buffer","__filename","__dirname"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AAOA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,8BAAqB;AAC/BC,SAAO,kCAAe,6BAAf,GAAmC,sBADX;AAE/BC,SAAO,CACL,GAAG,wBAAS;AACVC,WAAO;AACLC,eAAS,EADJ;AAELC,eAAS,CAAC,SAAD,CAFJ;AAGLC;AAHK,KADG;AAMVC,aAAS,CAAC,cAAD,EAAiB,SAAjB;AANC,GAAT,CADE,EASL,wBATK,EAUL,wBAVK,EAWL,kBAXK,CAFwB;AAe/BF,WAAS,CACP,yBADO,EAEP,GAAG,sBAFI,EAGP,GAAG,cAHI,EAIP,GAAG,iBAJI,EAKP,GAAG,wBALI,EAMP,GAAG,2BANI;AAfsB,CAArB,CAAZ;;AAyBA,MAAMG,SAAS,8BAAqB;AAClCP,SAAO,yBAD2B;AAElCQ,UAAQ,MAF0B;AAGlCC,UAAQ;AACNC,+CADM;AAENC,mBAAe;AAFT,GAH0B;AAOlCV,SAAO;AACL;AACA,KAAG,wBAAS;AACVC,WAAO;AACLC,eAAS,EADJ;AAELC,eAAS,CAAC,SAAD,CAFJ;AAGLC;AAHK,KADG;AAMVC,aAAS,CAAC,cAAD,EAAiB,SAAjB;AANC,GAAT,CAFE,EAUL,wBAVK,EAWL,wBAXK,EAYL,kBAZK,CAP2B;AAqBlCF,WAAS;AACP;AACA;AACA,MAAI,kBAAQQ,QAAR,CAAiBC,qBAArB,CAA2C,EAACC,WAAW,CAAZ,EAA3C,CAHO;;AAKP;AACA;AACA,MAAI,kBAAQC,YAAZ,CAAyB;AACvBC,YAAQ,0CADe;AAEvBC,SAAK,IAFkB;AAGvBC,eAAW;AAHY,GAAzB,CAPO,CArByB;AAkClCC,aAAW,CACT,oBADS,EAET,oBAFS,EAGT,qCAHS,CAlCuB;AAuClCC,WAAS,YAvCyB;AAwClCC,QAAM;AACJC,aAAS,KADL;AAEJC,YAAQ,KAFJ;AAGJC,aAAS,KAHL;AAIJC,YAAQ,KAJJ;AAKJC,gBAAY,KALR;AAMJC,eAAW;AANP;AAxC4B,CAArB,CAAf;;kBAkDe,kCAAe,CAAC5B,GAAD,EAAMQ,MAAN,CAAf,GAA+BR,G","file":"inferno.webpack.config.js","sourcesContent":["import webpack from 'webpack';\nimport nodeExternals from 'webpack-node-externals';\nimport {\n  babelEnvServer,\n  babelEnvSpa,\n  filenameServer,\n  isDevelopment,\n  isIsomorphic,\n} from '../prepare.build-tools.config';\nimport generalWebpackConfig from './general.webpack.config';\nimport { isomorphicEntry, serverEntry, spaEntry } from './general/entry';\nimport { extractCSS } from './plugins/css';\nimport { extractVendors, getAssetsFile, getIndexHtmlFile, HMR, uglify } from './plugins/js';\nimport compiler from './rules/compiler';\nimport { externalCSS, internalCSS } from './rules/css';\nimport { file } from './rules/files';\n\nconst spa = generalWebpackConfig({\n  entry: isIsomorphic ? isomorphicEntry() : spaEntry(),\n  rules: [\n    ...compiler({\n      babel: {\n        presets: [],\n        plugins: ['inferno'],\n        envPreset: babelEnvSpa,\n      },\n      exclude: [/node_modules/, /mobx.js/],\n    }),\n    internalCSS(),\n    externalCSS(),\n    file(),\n  ],\n  plugins: [\n    extractVendors(),\n    ...extractCSS(),\n    ...HMR(),\n    ...uglify(),\n    ...getAssetsFile(),\n    ...getIndexHtmlFile()\n  ],\n});\n\nconst server = generalWebpackConfig({\n  entry: serverEntry(),\n  target: 'node',\n  output: {\n    filename: filenameServer,\n    libraryTarget: 'commonjs2',\n  },\n  rules: [\n    // Override babel-preset-env configuration for Node.js\n    ...compiler({\n      babel: {\n        presets: [],\n        plugins: ['inferno'],\n        envPreset: babelEnvServer,\n      },\n      exclude: [/node_modules/, /mobx.js/],\n    }),\n    internalCSS(),\n    externalCSS(),\n    file(),\n  ],\n  plugins: [\n    // Do not create separate chunks of the server bundle\n    // https://webpack.github.io/docs/list-of-plugins.html#limitchunkcountplugin\n    new webpack.optimize.LimitChunkCountPlugin({maxChunks: 1}),\n\n    // Adds a banner to the top of each generated chunk\n    // https://webpack.github.io/docs/list-of-plugins.html#bannerplugin\n    new webpack.BannerPlugin({\n      banner: 'require(\"source-map-support\").install();',\n      raw: true,\n      entryOnly: false,\n    }),\n  ],\n  externals: [\n    /^\\.\\/assets\\.json$/,\n    /^\\.\\/config\\.json$/,\n    nodeExternals(),\n  ],\n  devtool: 'source-map',\n  node: {\n    console: false,\n    global: false,\n    process: false,\n    Buffer: false,\n    __filename: false,\n    __dirname: false,\n  },\n});\n\nexport default isIsomorphic ? [spa, server] : spa;\n"]}