{"version":3,"sources":["../../src/configs/postcss.config.js"],"names":["module","exports","loader","postCssPlugins","require","root","isolation","reset"],"mappings":";;AAAA;;AAEA;AACA;;AAEAA,OAAOC,OAAP,GAAkBC,MAAD,IAAa,CAC5B,GAAG,uBAAIC,cADqB;AAE5B;AACA;AACAC,QAAQ,gBAAR,EAA0B;AACxBC;AADwB,CAA1B,CAJ4B;AAO5B;AACA;AACAD,QAAQ,2BAAR,GAT4B;AAU5B;AACA;AACAA,QAAQ,sBAAR,GAZ4B;AAa5B;AACA;AACAA,QAAQ,sBAAR,GAf4B;AAgB5B;AACA;AACAA,QAAQ,0BAAR,GAlB4B;AAmB5B;AACA;AACAA,QAAQ,wBAAR,GArB4B;AAsB5B;AACA;AACAA,QAAQ,kBAAR,GAxB4B;AAyB5B;AACA;AACAA,QAAQ,0BAAR,GA3B4B;AA4B5B;AACA;AACAA,QAAQ,sBAAR,GA9B4B;AA+B5B;AACA;AACAA,QAAQ,wBAAR,GAjC4B,EAmC5B,IAAG,uBAAIE,SAAJ,GAAgB;AACjB;AACA;AACAF,QAAQ,mBAAR,EAA6B;AAC3BG,SAAO,uBAAIA;AADgB,CAA7B,CAHiB;AAMjB;AACAH,QAAQ,iBAAR,EAA2B;AACzBG,SAAO,uBAAIA;AADc,CAA3B,CAPiB,CAAhB,GAUC,EAVJ,CAnC4B;;AA+C5B;AACA;AACAH,QAAQ,cAAR,kCAjD4B,CAA9B","file":"postcss.config.js","sourcesContent":["import { browserslist, context, css } from './prepare.build-tools.config';\n\n// webpack.config.js\n// https://github.com/postcss/postcss-loader/tree/v2.0.5\n\nmodule.exports = (loader) => ([\n  ...css.postCssPlugins,\n  // Transfer @import rule by inlining content, e.g. @import 'normalize.css'\n  // https://github.com/postcss/postcss-import\n  require('postcss-import')({\n    root: context,\n  }),\n  // W3C variables, e.g. :root { --color: red; } div { background: var(--color); }\n  // https://github.com/postcss/postcss-custom-properties\n  require('postcss-custom-properties')(),\n  // W3C CSS Custom Media Queries, e.g. @custom-media --small-viewport (max-width: 30em);\n  // https://github.com/postcss/postcss-custom-media\n  require('postcss-custom-media')(),\n  // CSS4 Media Queries, e.g. @media screen and (width >= 500px) and (width <= 1200px) { }\n  // https://github.com/postcss/postcss-media-minmax\n  require('postcss-media-minmax')(),\n  // W3C CSS Custom Selectors, e.g. @custom-selector :--heading h1, h2, h3, h4, h5, h6;\n  // https://github.com/postcss/postcss-custom-selectors\n  require('postcss-custom-selectors')(),\n  // W3C color() function, e.g. div { background: color(red alpha(90%)); }\n  // https://github.com/postcss/postcss-color-function\n  require('postcss-color-function')(),\n  // Convert CSS shorthand filters to SVG equivalent, e.g. .blur { filter: blur(4px); }\n  // https://github.com/iamvdo/pleeease-filters\n  require('pleeease-filters')(),\n  // W3C CSS Level4 :matches() pseudo class, e.g. p:matches(:first-child, .special) { }\n  // https://github.com/postcss/postcss-selector-matches\n  require('postcss-selector-matches')(),\n  // Transforms :not() W3C CSS Level 4 pseudo class to :not() CSS Level 3 selectors\n  // https://github.com/postcss/postcss-selector-not\n  require('postcss-selector-not')(),\n  // Postcss flexbox bug fixer\n  // https://github.com/luisrudge/postcss-flexbugs-fixes\n  require('postcss-flexbugs-fixes')(),\n\n  ...css.isolation ? [\n    // PostCSS plugin for automatic rules isolation\n    // https://github.com/maximkoretskiy/postcss-autoreset\n    require('postcss-autoreset')({\n      reset: css.reset,\n    }),\n    // https://github.com/maximkoretskiy/postcss-initial\n    require('postcss-initial')({\n      reset: css.reset,\n    }),\n  ] : [],\n\n  // Add vendor prefixes to CSS rules using values from caniuse.com\n  // https://github.com/postcss/autoprefixer\n  require('autoprefixer')(browserslist),\n]);\n\n"]}