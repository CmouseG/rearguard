{"version":3,"sources":["../../src/configs/prepare.build-tools.config.js"],"names":["CWD","process","cwd","getProjectAbsPath","relPath","resolve","config","additionalModules","modules","map","isDevelopment","env","NODE_ENV","isProduction","isDebug","WEBPACK_DEBUG","isVerbose","BUILD_TOOLS_VERBOSE","isAnalyze","BUILD_TOOLS_ANALYZE","isMobx","ENABLED_MOBX_TOOLS","isIsomorphic","ENABLED_ISOMORPHIC","isRelay","ENABLED_RELAY","isBrovserSync","ENABLED_BROWSER_SYNC","isInferno","INFERNOJS_SPA","isTS","ENABLED_TYPE_SCRIPT","isRHL","ENABLED_RHL","filename","chunkFilename","_publicDirName","isomorphic","publicDirName","outputPublicPath","output","path","outputProtectPath","context","entry","publicPath","pathinfo","stats","colors","timings","maxModules","reasons","hash","version","chunks","chunkModules","cached","cachedAssets","devServer","contentBase","browserslist","proxy","host","socket","port","protocol","DEBUG","__DEV__","__PROD__","__RHL__","babelEnvSpa","targets","browsers","useBuiltIns","debug","entryServer","outputServer","filenameServer","babelEnvServer","node","nodeVersion","dependencies","engines","serverWasRunDetectString","postCssPluginsFile","css","postCssPlugins","existsSync","require","isolation","reset","Array","isArray","tmpTypescryptConfigDir","__dirname","tmpTypescryptConfigPath","typescript","postCssConfig"],"mappings":"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","file":"prepare.build-tools.config.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport getConfig from './utils/getConfig';\n\nconst CWD = process.cwd();\nexport const getProjectAbsPath = (relPath) => {\n  if (relPath) {\n    return path.resolve(CWD, relPath);\n  }\n\n  return '';\n};\nconst config = getConfig();\n//console.log(JSON.stringify(config, null, 2));\nconst additionalModules = config.modules.map(relPath => getProjectAbsPath(relPath));\n\nexport const isDevelopment = process.env.NODE_ENV === 'development';\nexport const isProduction = process.env.NODE_ENV === 'production';\nexport const isDebug = process.env.WEBPACK_DEBUG === 'true';\nexport const isVerbose = process.env.BUILD_TOOLS_VERBOSE === 'true';\nexport const isAnalyze = process.env.BUILD_TOOLS_ANALYZE === 'true';\nexport const isMobx = process.env.ENABLED_MOBX_TOOLS === 'true';\nexport const isIsomorphic = process.env.ENABLED_ISOMORPHIC === 'true';\nexport const isRelay = process.env.ENABLED_RELAY === 'true';\nexport const isBrovserSync = process.env.ENABLED_BROWSER_SYNC === 'true';\nexport const isInferno = process.env.INFERNOJS_SPA === 'true';\nexport const isTS = process.env.ENABLED_TYPE_SCRIPT === 'true';\nexport const isRHL = process.env.ENABLED_RHL === 'true';\n\nconst filename = isDevelopment ? '[name].js?[hash:4]' : '[chunkhash:32].js';\nconst chunkFilename = isDevelopment ? '[name].chunk.js?[hash:4]' : '[chunkhash:32].chunk.js';\nconst _publicDirName = config.isomorphic.publicDirName;\nconst outputPublicPath = getProjectAbsPath(\n  isIsomorphic ? `${config.output.path}/${_publicDirName}` : config.output.path,\n);\nconst outputProtectPath = getProjectAbsPath(config.output.path);\n\nexport const context = getProjectAbsPath(config.context);\nexport const entry = config.entry;\nexport const output = {\n  path: outputPublicPath,\n  publicPath: config.output.publicPath,\n  filename,\n  chunkFilename,\n  pathinfo: isVerbose || isDebug,\n};\nexport const modules = ['node_modules', ...additionalModules];\nexport const stats = {\n  colors: true,\n  timings: true,\n  context,\n  modules: isVerbose,\n  maxModules: isDebug ? 100000 : 10,\n  reasons: isVerbose,\n  hash: isVerbose,\n  version: isVerbose,\n  chunks: isVerbose,\n  chunkModules: isVerbose,\n  cached: isVerbose,\n  cachedAssets: isVerbose,\n};\nexport const devServer = {\n  publicPath: output.publicPath,\n  contentBase: outputPublicPath,\n  stats,\n};\nexport const browserslist = config.browserslist;\nexport const proxy = config.proxy;\nexport const host = config.socket.host;\nexport const port = config.socket.port;\nexport const protocol = 'http';\nexport const socket = `${protocol}://${host}:${port}`;\nexport const env = {\n  NODE_ENV: isDevelopment ? '\"development\"' : '\"production\"',\n  DEBUG: isDebug,\n  __DEV__: isDevelopment,\n  __PROD__: isProduction,\n  __RHL__: isRHL,\n};\n// A Babel preset that can automatically determine the Babel plugins and polyfills\n// https://github.com/babel/babel-preset-env\nexport const babelEnvSpa = [\n  'env',\n  {\n    targets: {\n      browsers: browserslist,\n    },\n    modules: false,\n    useBuiltIns: false,\n    debug: isDebug,\n  },\n];\n\n// For server build in isomorphic mode\nexport const entryServer = config.isomorphic.entry;\nexport const publicDirName = _publicDirName;\nexport const outputServer = outputProtectPath;\nexport const filenameServer = `../${entryServer}`;\nexport const babelEnvServer = [\n  'env',\n  {\n    targets: {\n      node: config.nodeVersion,\n    },\n    modules: false,\n    useBuiltIns: false,\n    debug: false,\n  },\n];\nexport const dependencies = config.dependencies;\nexport const engines = config.engines;\nexport const serverWasRunDetectString = `The server is running at ${socket}`;\n\nconst postCssPluginsFile = getProjectAbsPath(config.css.postCssPlugins);\nconst postCssPlugins = fs.existsSync(postCssPluginsFile) ? require(postCssPluginsFile) : [];\n\nexport const css = {\n  isolation: config.css.isolation,\n  reset: config.css.reset,\n  postCssPlugins: Array.isArray(postCssPlugins) ? postCssPlugins : [],\n};\nexport const tmpTypescryptConfigDir = path.resolve(__dirname, '../../tmp');\nexport const tmpTypescryptConfigPath = path.resolve(__dirname, '../../tmp/tsconfig.json');\nexport const typescript = config.typescript;\nexport const postCssConfig = require(path.resolve(__dirname, 'postcss.config.js'));\n"]}