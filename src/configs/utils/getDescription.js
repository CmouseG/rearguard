module.exports = (rootName) => (
  `Usage
    ${rootName}                             - запустит WDS
    ${rootName} [-h|--help]                 - покажет список команд
    ${rootName} [build]                     - либо запустит WDS либо сделает пачку в режиме разработки
    ${rootName} [build] [-r | --release]    - либо запустит WDS либо сделает пачку в режиме производства
    ${rootName} [build] [-v | --verbose]    - либо запустит WDS либо сделает пачку в режиме разработки с 
                                              дополнительной информацией
    ${rootName} [build] [-a | --analyze]    - запустит серер демонстрирующий компоненты в пачке
    ${rootName} [build] [-d | --debug]      - либо запустит WDS либо сделает пачку в режиме с отладочной информацией	
    ${rootName} [build] [--mobx | -m]       - Будут применены расширения доступные для mobx
    ${rootName} [build] [--isomorphic | -i] - Будет расширенно приложение и конфигуряция для использование изоморфного 
                                              режима

  EXAMPLES
    ${rootName} -i        - запустит сборку в изоморфном режиме.
    ${rootName}           - запустит сборку в spa режиме.
    ${rootName} -m        - запустит сборку в spa режиме + добавит расширения для mobx.
    ${rootName} -m -i     - запустит сборку в изоморфном режиме + добавит расширения для mobx.
    ${rootName} -r -v -d  - запустит сборку в spa режиме + выведет дополнительную информацию + 
                            приложение будет собираться для production + отладочная информация.

  Options
    --typeScript, -ts  Все будет обрабатываться через TypeScript
    --mobx,       -m   включить расширения доступные для mobx
    --isomorphic, -i   включить режим изоморфности
    --verbose,    -v   выводит больше информации
    --release,    -r   запустить в производственном режиме
    --debug,      -d   включить отладочную информацию.
    --analyze,    -a   запуск сборки с запуском сеовеоа который демонстрирует отладочную информацию.
    --help,       -h   показать доступные команды`);
